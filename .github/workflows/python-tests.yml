name: Python CI with Poetry

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version

      - name: Install dependencies
        run: poetry install

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Run Black (code formatting)
        run: poetry run black --line-length 79 .

      - name: Run infrastructure tests
        run: poetry run pytest tests/infrastructure/ -v

      - name: Run log_params_metrics_model tests
        run: poetry run python -m unittest tests/domain/test_log_params_metrics_model.py

      - name: Run experiments and train models
        run: poetry run python run.py

      - name: Run register_model tests
        run: poetry run python -m unittest tests/domain/test_register_model.py

      - name: Register best model
        run: poetry run python california_houseprice_prediction/domain/register_model.py

      - name: Run fetch_model tests
        run: poetry run python -m unittest tests/application/test_fetch_model.py
      
      - name: Fetch best model
        run: poetry run python california_houseprice_prediction/application/fetch_model.py

      - name: Run API tests
        run: poetry run pytest tests/application/test_api.py -v

      - name: Run MLflow model serving tests
        run: poetry run python -m unittest tests/application/test_mlflow_model_serving.py

      - name: Start API in background
        run: |
          poetry run uvicorn california_houseprice_prediction.application.api:app --host 0.0.0.0 --port 8000 &
          echo "API started on port 8000"

      - name: Start MLflow serving
        run: |
          MODEL_NAME=$(poetry run python -c "from config import REGISTERED_MODEL_NAME; print(REGISTERED_MODEL_NAME)")
          MODEL_ALIAS=$(poetry run python -c "from config import REGISTERED_MODEL_ALIAS; print(REGISTERED_MODEL_ALIAS)")
          poetry run mlflow models serve -m "models:/$MODEL_NAME@$MODEL_ALIAS" -p 5001 --no-conda &
          sleep 10
          poetry run python california_houseprice_prediction/application/mlflow_model_serving.py

      - name: Notify Slack on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "CI/CD pipeline failed :x:"